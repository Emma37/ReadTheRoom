{"version":3,"sources":["pages/Home.jsx","pages/Teacher.jsx","components/SpeechButton.jsx","pages/Student.jsx","Main.jsx","components/NavBar.jsx","App.js","reportWebVitals.js","index.js"],"names":["Home","className","to","Teacher","class","SpeechButton","props","text","Student","videoRef","React","createRef","navigator","mediaDevices","getUserMedia","video","facingMode","then","stream","console","log","current","srcObject","catch","err0r","id","autoPlay","playsInline","ref","map","value","index","Main","exact","path","component","NavBar","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAkCeA,EA9BF,WACT,OACI,qCACI,+CACA,sBAAKC,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,eAAC,IAAD,CAAMC,GAAG,WAAT,UACI,iEAGA,+CAKR,qBAAKD,UAAU,WAAf,SACI,eAAC,IAAD,CAAMC,GAAG,WAAT,UACI,iEAGA,sDCRTC,EAbC,WACZ,OACI,qCACA,yCACA,qBAAKC,MAAM,MAAX,SACI,qBAAKA,MAAM,kBAAX,oDCKGC,MAVf,SAAsBC,GAClB,OACI,mCACI,wBAAQL,UAAU,gBAAlB,SACKK,EAAMC,UCoERC,EAtEC,WAGZ,IAAMC,EAAWC,IAAMC,YAEnBC,UAAUC,aAAaC,cACvBF,UAAUC,aAAaC,aAAa,CAACC,MAAO,CAACC,WAAY,UAC5DC,MAAK,SAASC,GACXC,QAAQC,IAAIF,GACZC,QAAQC,IAAIX,GACZA,EAASY,QAAQC,UAAYJ,KAEhCK,OAAM,SAASC,GACZL,QAAQC,IAAII,GACZL,QAAQC,IAAI,8BAoBhB,OACI,qCACA,2DAIA,qBAAKK,GAAG,YAAR,SACI,uBAAOC,UAAQ,EAACC,aAAW,EAACF,GAAG,eAAexB,UAAU,UAAU2B,IAAKnB,MAG3E,iCAzBY,CAAC,eAAgB,eA0BhBoB,KAAI,SAACC,EAAOC,GACjB,OAAO,iCAASD,SAKxB,2EAIA,gCACI,mIADJ,aAIA,gCACI,uEACA,cAAC,EAAD,CAAcvB,KAAK,qBACnB,cAAC,EAAD,CAAcA,KAAK,mBACnB,cAAC,EAAD,CAAcA,KAAK,sCACnB,cAAC,EAAD,CAAcA,KAAK,+BCpDhByB,EAVF,WACX,OACE,eAAC,IAAD,eACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWnC,IACjC,cAAC,IAAD,CAAOiC,OAAK,EAACC,KAAK,WAAWC,UAAWhC,IACxC,cAAC,IAAD,CAAO8B,OAAK,EAACC,KAAK,WAAWC,UAAW3B,QCI/B4B,EAZA,WACX,OACI,mCACI,qBAAKnC,UAAU,eAAf,SACI,cAAC,IAAD,CAAMC,GAAG,IAAT,gCCSDmC,MAXf,WACE,OACE,cAAC,IAAD,UACE,sBAAKpC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UCCOqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e322da05.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\n\n\nconst Home = () => {\n    return (\n        <>\n            <h1>Please select</h1>\n            <div className=\"row\">\n                <div className=\"col-lg-6\">\n                    <Link to=\"/teacher\">\n                        <div>\n                            üë©‚Äçüè´\n                        </div>\n                        <div>\n                            Teacher\n                        </div>\n                    </Link>\n                </div>\n                <div className=\"col-lg-6\">\n                    <Link to=\"/student\">\n                        <div>\n                            üë®‚Äçüéì\n                        </div>\n                        <div>\n                            Student\n                        </div>\n                    </Link>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Home;\n","import React from 'react';\n\n\nconst Teacher = () => {\n    return (\n        <>\n        <h1>Teacher</h1>\n        <div class=\"row\">\n            <div class=\"col-6 bg-danger\">\n                fdlgjfdlkgdfl gkdfjgldfgj fdklgj\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default Teacher;\n","import React from 'react';\n\n\nfunction SpeechButton(props){\n    return (\n        <>\n            <button className=\"Speech button\">\n                {props.text}\n            </button>\n        </>\n    )\n}\n\nexport default SpeechButton;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport SpeechButton from '../components/SpeechButton';\n\n\nconst Student = () => {\n\n    // var video = document.querySelector(\"#videoElement\");\n    const videoRef = React.createRef();\n\n    if (navigator.mediaDevices.getUserMedia) {\n        navigator.mediaDevices.getUserMedia({video: {facingMode: \"user\"}})\n    .then(function(stream) {\n        console.log(stream);\n        console.log(videoRef);\n        videoRef.current.srcObject = stream;\n    })\n    .catch(function(err0r) {\n        console.log(err0r);\n        console.log(\"Something went wrong 2!\");\n    });\n    }\n\n    const items = [];\n    const devices = [\"Front camera\", \"Back camera\"];\n\n    // console.log(\"test\", navigator.mediaDevices\n    //     .enumerateDevices())\n\n    // const devices = navigator.mediaDevices\n    // .enumerateDevices();\n\n    // for(const [index, value] in devices){\n    //     var mediaDevice = devices[index];\n    //     if (mediaDevice.kind === 'videoinput') {\n    //         items.push(<option>{mediaDevice.label}</option>)\n    //     }\n    // }\n\n    return (\n        <>\n        <h1>Class: Algebra 28/01/2021</h1>\n\n\n\n        <div id=\"container\">\n            <video autoPlay playsInline id=\"videoElement\" className=\"bg-dark\" ref={videoRef}>\n            </video>\n        </div>\n        <select>\n            {devices.map((value, index) => {\n                return <option>{value}</option>\n            })}\n            {/* {items} */}\n        </select>\n\n        <div>\n            No one can see this video stream but you\n        </div>\n\n        <div>\n            <div>This is the data being sent to your teacher and will be aggregated with everyone from your class</div>\n            Emotion\n        </div>\n        <div>\n            <div>Need to tell your teacher something?</div>\n            <SpeechButton text=\"Please slow down\" />\n            <SpeechButton text=\"You're on mute\" />\n            <SpeechButton text=\"There's a bad internet connection\" />\n            <SpeechButton text=\"I'm really confused\" />\n        </div>\n        </>\n    )\n}\n\nexport default Student;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Teacher from './pages/Teacher';\nimport Student from './pages/Student';\n\nconst Main = () => {\n  return (\n    <Switch> {/* The Switch decides which component to show based on the current URL.*/}\n      <Route exact path='/' component={Home}></Route>\n      <Route exact path='/teacher' component={Teacher}></Route>\n      <Route exact path='/student' component={Student}></Route>\n    </Switch>\n  );\n}\n\nexport default Main;","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\n\nconst NavBar = () => {\n    return (\n        <>\n            <div className=\"bg-dark py-3\">\n                <Link to=\"/\">\n                    Read the Room\n                </Link>\n            </div>\n        </>\n    )\n}\n\nexport default NavBar;\n","import \"./App.css\";\n\nimport Main from \"./Main\";\nimport NavBar from \"./components/NavBar\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <NavBar />\n        <Main />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}