[{"/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/index.js":"1","/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/App.js":"2","/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/reportWebVitals.js":"3","/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/Main.jsx":"4","/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/components/NavBar.jsx":"5","/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/pages/Home.jsx":"6","/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/pages/Teacher.jsx":"7","/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/pages/Student.jsx":"8","/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/components/AttendancePieChart.jsx":"9","/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/components/EmotionLeaderBoard.jsx":"10","/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/components/Notification.jsx":"11","/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/components/SpeechButton.jsx":"12"},{"size":500,"mtime":1611423757238,"results":"13","hashOfConfig":"14"},{"size":294,"mtime":1611445166870,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1611417755605,"results":"16","hashOfConfig":"14"},{"size":621,"mtime":1611484213217,"results":"17","hashOfConfig":"14"},{"size":656,"mtime":1611445166873,"results":"18","hashOfConfig":"14"},{"size":1659,"mtime":1611484213224,"results":"19","hashOfConfig":"14"},{"size":5482,"mtime":1611494747143,"results":"20","hashOfConfig":"14"},{"size":14247,"mtime":1611497659647,"results":"21","hashOfConfig":"14"},{"size":1095,"mtime":1611486527862,"results":"22","hashOfConfig":"14"},{"size":1391,"mtime":1611484100372,"results":"23","hashOfConfig":"14"},{"size":748,"mtime":1611486739830,"results":"24","hashOfConfig":"14"},{"size":645,"mtime":1611495112322,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"xd1tc9",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/index.js",[],["54","55"],"/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/App.js",[],"/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/reportWebVitals.js",[],"/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/Main.jsx",[],"/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/components/NavBar.jsx",[],"/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/pages/Home.jsx",[],"/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/pages/Teacher.jsx",["56"],"import React from 'react';\nimport AttendancePieChart from '../components/AttendancePieChart';\nimport EmotionLeaderBoard from '../components/EmotionLeaderBoard';\nimport SimpleNotification from '../components/Notification';\nimport axios from 'axios';\n\n\nclass Teacher extends React.Component{\n    checkDataIntervalObject = null\n    emotionMap = {\"neutral\": \"ðŸ™‚ Neutral\",\n                  \"anger\": \"ðŸ˜¡ Anger\",\n                  \"contempt\": \"ðŸ˜’ Contempt\",\n                  \"disgust\": \"ðŸ¤¢ Disgust\",\n                  \"fear\": \"ðŸ˜¨ Fear\",\n                  \"happiness\": \"ðŸ˜„ Happiness\",\n                  \"sadness\": \"ðŸ˜¢ Sadness\",\n                  \"surprise\": \"ðŸ˜® Surprise\",\n                  \"confused\": \"ðŸ¤” Confused\",\n                  \"absent\": \"Unknown\"}\n    keys = [\"neutral\", \"anger\", \"contempt\", \"disgust\", \"fear\", \"happiness\", \"sadness\", \"surprise\", \"confused\"]\n    absentColor = \"#696773\"\n    presentColor = \"#009fb7\"\n    messagesMap = {\"muted\": \"You may be muted.\",\n                   \"no_slides\": \"Your slides can't be seen.\",\n                   \"slow_internet\": \"Your image quality seems to be degraded.\",\n                   \"slow_down\": \"You may be going too fast.\",\n                   \"confused\": \"Your students are confused.\"}\n    messageKeys = [\"muted\", \"no_slides\", \"slow_internet\", \"slow_down\", \"confused\"]\n\n    constructor(props) {\n        super(props);\n        var data =\n            {\"ðŸ˜¡ Anger\": 0,\n            \"ðŸ˜’ Contempt\": 0,\n            \"ðŸ¤¢ Disgust\": 0,\n            \"ðŸ˜¨ Fear\": 0,\n            \"ðŸ˜„ Happiness\": 0,\n            \"ðŸ™‚ Neutral\": 0,\n            \"ðŸ˜¥ Sadness\": 0,\n            \"ðŸ˜® Surprise\": 0,\n            \"ðŸ¤” Confused\": 0,\n        };\n        var mockAttendanceData = [{title: \"Absent\", value: 5,\n                                   color: this.absentColor}]\n        this.state = {emotionsData: data, attendanceData: mockAttendanceData};\n    }\n\n    checkDataAtIntervals = () => {\n        var intervalObject = setInterval(() => {\n            // Get stuff\n            axios({method: \"get\",\n              url: \"./current_data\"})\n            .then(data => {\n                // Handle emotions\n                var givenData = data.data;\n                var newData = {};\n                var presentStudents = 0;\n                this.keys.forEach(key => {\n                    console.log(key);\n                    if (key in givenData.users){\n                        newData[this.emotionMap[key]] = givenData.users[key];\n                        presentStudents += givenData.users[key];\n                    }\n                    else{\n                        newData[this.emotionMap[key]] = 0;\n                    }\n                })\n\n                // Handle absence\n                var absentStudents = 0;\n                var attendanceData = [];\n                if (\"absent\" in givenData.users){\n                    absentStudents += givenData.users.absent;\n                }\n                if (presentStudents === 0){\n                    attendanceData = [{title: \"Absent\", value: 5, color: this.absentColor}];\n                }\n                else if (absentStudents === 0){\n                    attendanceData = [{title: \"Present\", value: 5, color: this.presentColor}];\n                }\n                else{\n                    attendanceData = [{title: \"Absent\", value: absentStudents, color: this.absentColor},\n                                      {title: \"Present\", value: presentStudents, color: this.presentColor}]\n                }\n\n                this.setState({emotionsData: newData, attendanceData: attendanceData});\n\n                // Handle messages\n                var maxCount = 0;\n                var maxMessage = null;\n                this.messageKeys.forEach(key => {\n                    if (key in givenData.commands && givenData.commands[key] > maxCount){\n                        maxCount = givenData.commands[key];\n                        maxMessage = key;\n                    }\n                })\n                if (maxMessage != null){\n                    new Notification('Read the Room: ' + this.messagesMap[maxMessage]);\n                }\n            })\n        }, 3000);\n        return intervalObject;\n    }\n\n    componentDidMount(){\n        this.checkDataIntervalObject = this.checkDataAtIntervals();\n        if (!(\"Notification\" in window)) {\n          console.log(\"This browser does not support desktop notification\");\n        } else {\n          Notification.requestPermission();\n        }\n    }\n\n    componentWillUnmount(){\n        if (this.checkDataIntervalObject != null){\n            clearInterval(this.checkDataInterval);\n        }\n    }\n\n    render(){\n        return (\n            <>\n            <div className=\"text-center mb-3 mb-lg-5\">\n                <h1>Class: Algebra 28/01/2021</h1>\n                <div>Session key: silly-ferret-feet</div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-lg-6\">\n                    <h2>Emotional Engagement</h2>\n                    <div>See what emotions your students are showing</div>\n                    <EmotionLeaderBoard data={this.state.emotionsData}/>\n                </div>\n                <div class=\"col-lg-6 mt-5 mt-lg-0\">\n                    <h2>Attendance</h2>\n                    <div>Check the class attendance</div>\n                    <AttendancePieChart attendanceData={this.state.attendanceData}/>\n                </div>\n            </div>\n        </>\n    )\n  }\n}\n\nexport default Teacher;\n","/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/pages/Student.jsx",["57","58","59","60"],"/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/components/AttendancePieChart.jsx",["61"],"import React from 'react';\nimport { PieChart } from 'react-minimal-pie-chart';\n\nclass AttendancePieChart extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    //   const data = {};\n\n    //   data.dataset = [\n    //     {label: 'not attending', quantity: 5},\n    //     {label: 'present', quantity: 26},\n    //     {label: 'away', quantity: 2},\n    //   ]\n\n    //   data.colors = [\"blue\", \"orange\", \"purple\"];\n\n    //   data.arcClass = 'arc';\n\n    // pass in real values in props\n    // const mockData = [\n    //     { title: 'Absent', value: 5, color: '#696773' },\n    //     { title: 'Present', value: 26, color: '#009fb7' },\n    //     { title: 'Away', value: 2, color: ' #fed766' },\n    // ];\n\n\n    return (\n      <div>\n          <PieChart\n            data={this.props.attendanceData}\n            radius={40}\n            label={({ dataEntry }) => dataEntry.title}\n            labelStyle={{\n                fontSize: 0.25+'rem',\n                textAlign: 'right',\n              }}\n          />\n      </div>\n    )\n  }\n};\n\nexport default AttendancePieChart;\n","/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/components/EmotionLeaderBoard.jsx",["62","63"],"import React from 'react';\n\nclass EmotionLeaderBoard extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    // update with values from props\n    // var data =\n    //     { \"ðŸ˜¡ Anger\": 1,\n    //     \"ðŸ˜’ Contempt\": 1,\n    //     \"ðŸ¤¢ Disgust\": 2,\n    //     \"ðŸ˜¨ Fear\": 0,\n    //     \"ðŸ˜„ Happiness\": 8,\n    //     \"ðŸ™‚ Neutral\": 15,\n    //     \"ðŸ˜¥ Sadness\": 1,\n    //     \"ðŸ˜® Surprise\": 0\n    // };\n\n    var total = 0;\n\n    for (const [key, value] of Object.entries(this.props.data)) {\n        total += value;\n      }\n\n    var itemArray = Object.keys(this.props.data).map((key) => {\n        return [key, this.props.data[key]];\n      });\n\n    itemArray.sort(function(first, second) {\n    return second[1] - first[1];\n    });\n\n    console.log(itemArray)\n\n    return (\n      <div>\n          <ul className=\"emotion-leaderboard\">\n          {/* {Object.keys(data).map((key, index) => (\n          <li key={index} style={{fontSize: (Math.max(5, data[key])/total)*6 +'rem'}}>{key} ({data[key]})</li>\n            ))\n        } */}\n\n            {itemArray.map((value, index) => {\n                            return <li className=\"mb-3\" style={{fontSize: Math.min(Math.max(value[1]+1 / (total + 1), 0.5) * 1.5, 6) +'rem'}}>{value[0]} ({value[1]})</li>\n                        })}\n          </ul>\n      </div>\n    )\n  }\n};\n\nexport default EmotionLeaderBoard;\n","/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/components/Notification.jsx",[],"/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/components/SpeechButton.jsx",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":4,"column":8,"nodeType":"70","messageId":"71","endLine":4,"endColumn":26},{"ruleId":"68","severity":1,"message":"72","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":26},{"ruleId":"68","severity":1,"message":"73","line":4,"column":10,"nodeType":"70","messageId":"71","endLine":4,"endColumn":16},{"ruleId":"68","severity":1,"message":"74","line":232,"column":15,"nodeType":"70","messageId":"71","endLine":232,"endColumn":20},{"ruleId":"68","severity":1,"message":"75","line":243,"column":15,"nodeType":"70","messageId":"71","endLine":243,"endColumn":22},{"ruleId":"76","severity":1,"message":"77","line":6,"column":3,"nodeType":"78","messageId":"79","endLine":8,"endColumn":4},{"ruleId":"76","severity":1,"message":"77","line":5,"column":3,"nodeType":"78","messageId":"79","endLine":7,"endColumn":4},{"ruleId":"68","severity":1,"message":"80","line":24,"column":17,"nodeType":"70","messageId":"71","endLine":24,"endColumn":20},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'SimpleNotification' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'render' is defined but never used.","'items' is assigned a value but never used.","'devices' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'key' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]