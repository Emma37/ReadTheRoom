[{"/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/index.js":"1","/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/reportWebVitals.js":"2","/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/App.js":"3","/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/Main.jsx":"4","/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/components/NavBar.jsx":"5","/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/pages/Home.jsx":"6","/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/pages/Student.jsx":"7","/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/pages/Teacher.jsx":"8","/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/components/SpeechButton.jsx":"9","/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/components/EmotionLeaderBoard.jsx":"10","/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/components/AttendancePieChart.jsx":"11","/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/components/Notification.jsx":"12"},{"size":500,"mtime":1611423757238,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1611417755605,"results":"15","hashOfConfig":"14"},{"size":294,"mtime":1611445166870,"results":"16","hashOfConfig":"14"},{"size":621,"mtime":1611484213217,"results":"17","hashOfConfig":"14"},{"size":656,"mtime":1611445166873,"results":"18","hashOfConfig":"14"},{"size":1659,"mtime":1611484213224,"results":"19","hashOfConfig":"14"},{"size":9630,"mtime":1611486388082,"results":"20","hashOfConfig":"14"},{"size":5453,"mtime":1611487804832,"results":"21","hashOfConfig":"14"},{"size":645,"mtime":1611474066664,"results":"22","hashOfConfig":"14"},{"size":1391,"mtime":1611484100372,"results":"23","hashOfConfig":"14"},{"size":1095,"mtime":1611486527862,"results":"24","hashOfConfig":"14"},{"size":748,"mtime":1611486739830,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"xd1tc9",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/index.js",[],["55","56"],"/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/reportWebVitals.js",[],"/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/App.js",[],"/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/Main.jsx",[],"/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/components/NavBar.jsx",[],"/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/pages/Home.jsx",[],"/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/pages/Student.jsx",["57","58","59"],"import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { ImageCapture } from 'image-capture';\nimport { render } from 'react-dom';\nimport SpeechButton from '../components/SpeechButton';\n\n\nclass Student extends React.Component{\n    videoRef = React.createRef();\n    sendIntervalObject = null;\n    userId = Math.floor(Math.random() * 10000);\n\n    sendCurrentData = () => {\n        var dataToSend = {main_emotion: this.state.maxEmotion, id: this.userId};\n        if (this.state.muteMessage === true){\n            dataToSend[\"active_command\"] = \"muted\";\n        }\n        else if (this.state.cannotSeeSlidesMessage === true){\n            dataToSend[\"active_command\"] = \"no_slides\"\n        }\n        else if (this.state.internetConnectionMessage === true){\n            dataToSend[\"active_command\"] = \"slow_internet\";\n        }\n        else if (this.state.slowDownMessage === true){\n            dataToSend[\"active_command\"] = \"slow_down\";\n        }\n        else if (this.state.confusedMessage === true){\n            dataToSend[\"active_command\"] = \"confused\";\n        }\n        axios({method: \"post\",\n              data: dataToSend,\n              url: \"./send_data\"})\n        .then(data => {console.log(JSON.stringify(data))})\n    }\n\n    sendFaceAtIntervals = (imageCapture) => {\n        const url = \"./image_analysis\"\n        const canvas = document.createElement('canvas');\n        var intervalObject = setInterval(() => {\n            imageCapture.grabFrame()\n            .then(img => {\n                console.log(img); // ImageBitmap\n                return new Promise(res => {\n                  // resize it to the size of our ImageBitmap\n                  canvas.width = img.width;\n                  canvas.height = img.height;\n                  // try to get a bitmaprenderer context\n                  let ctx = canvas.getContext('bitmaprenderer');\n                  if(ctx) {\n                    // transfer the ImageBitmap to it\n                    ctx.transferFromImageBitmap(img);\n                  }\n                  else {\n                    // in case someone supports createImageBitmap only\n                    // twice in memory...\n                    canvas.getContext('2d').drawImage(img,0,0);\n                  }\n                  // get it back as a Blob\n                  canvas.toBlob(res);\n                });\n              })\n            .then(blobData => {\n               axios({\n                method: \"post\",\n                url: url,\n                // contentType: \"application/octet-stream\",\n                headers:{\n                    \"content-type\":\"application/octet-stream\",\n                },\n                data: blobData\n               })\n               .then(data => {\n                  console.log(JSON.stringify(data));\n                  this.setState({maxEmotion: data.data.max_emotion});\n                  this.sendCurrentData();\n              })\n              //  .catch(function(err) {\n              //     console.log(JSON.stringify(err));\n              // })\n           });\n        }, 3000);\n        return intervalObject;\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {maxEmotion: \"absent\",\n                      muteMessage: false,\n                      confusedMessage: false,\n                      slowDownMessage: false,\n                      internetConnectionMessage: false,\n                      cannotSeeSlidesMessage: false\n                      };\n    }\n\n    componentDidMount(){\n        if (navigator.mediaDevices.getUserMedia) {\n            navigator.mediaDevices.getUserMedia({video: {facingMode: \"user\"}})\n        .then(stream => {\n            this.videoRef.current.srcObject = stream;\n\n            const mediaStreamTrack = stream.getVideoTracks()[0];\n            const imageCapture = new ImageCapture(mediaStreamTrack);\n            this.sendIntervalObject = this.sendFaceAtIntervals(imageCapture);\n        })\n        .catch(err0r => {\n            console.log(err0r);\n            console.log(\"Something went wrong 2!\");\n        });\n        }\n    }\n\n    componentWillUnmount(){\n        if (this.sendIntervalObject != null){\n            console.log(\"Unmounting\")\n            this.videoRef.current.srcObject.getTracks().forEach((track) => track.stop())\n            clearInterval(this.sendIntervalObject);\n        }\n    }\n\n    flipState = (state) => {\n        return () =>{\n            var newDict = {};\n            newDict[state] = !this.state[state];\n            this.setState(newDict);\n        }\n    }\n\n    render(){\n        const items = [];\n        var emotionMap = {\"neutral\": \"ğŸ™‚ Neutral\",\n                          \"anger\": \"ğŸ˜¡ Anger\",\n                          \"contempt\": \"ğŸ˜’ Contempt\",\n                          \"disgust\": \"ğŸ¤¢ Disgust\",\n                          \"fear\": \"ğŸ˜¨ Fear\",\n                          \"happiness\": \"ğŸ˜„ Happiness\",\n                          \"sadness\": \"ğŸ˜¢ Sadness\",\n                          \"surprise\": \"ğŸ˜® Surprise\",\n                          \"absent\": \"Unknown\"}\n        const devices = [\"Front camera\", \"Back camera\"];\n\n        // console.log(\"test\", navigator.mediaDevices\n        //     .enumerateDevices())\n\n        // const devices = navigator.mediaDevices\n        // .enumerateDevices();\n\n        // for(const [index, value] in devices){\n        //     var mediaDevice = devices[index];\n        //     if (mediaDevice.kind === 'videoinput') {\n        //         items.push(<option>{mediaDevice.label}</option>)\n        //     }\n        // }\n\n        return (\n            <>\n            <h1 className=\"text-center mb-3 mb-lg-5\">Class: Algebra 28/01/2021</h1>\n\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-6\">\n                        <div>\n                            <div className=\"bg-secondary p-2\">\n                                Only you can see this video stream\n                            </div>\n                            <div id=\"container\">\n                                <video autoPlay playsInline id=\"videoElement\" className=\"webcam-feed bg-dark\" ref={this.videoRef}>\n                                </video>\n                            </div>\n                        </div>\n                        <select className=\"form-select form-select-lg\">\n                            {devices.map((value, index) => {\n                                return <option>{value}</option>\n                            })}\n                            {/* {items} */}\n                        </select>\n                    </div>\n                    <div className=\"col-lg-6 mt-3 mt-lg-0\">\n                        <div>\n                            <h2>\n                                Your data\n                            </h2>\n                            <div>\n                                This is the data being anonymously sent to your teacher which will be aggregated with everyone from your class\n                            </div>\n                            <div className=\"row mt-4 mb-5\">\n                                <div className=\"col-6\">\n                                    <div className=\"data-item\">\n                                        <div className=\"data__title\">\n                                            Attendance\n                                        </div>\n                                        <div className=\"data__value\">\n                                            {this.state.maxEmotion === \"absent\" ? \"ğŸ‘» Lost\" : \"âœ” Present\"}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-6\">\n                                    <div className=\"data-item\">\n                                        <div className=\"data__title\">\n                                            Emotion\n                                        </div>\n                                        <div className=\"data__value\">\n                                            {emotionMap[this.state.maxEmotion]}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"mt-3 divider-top pt-4\">\n                            <h2>\n                                Raise an issue\n                            </h2>\n                            <div className=\"pb-4\">\n                                Let your teacher know something is wrong\n                            </div>\n                            <SpeechButton id=\"SB1\" text=\"You're on mute\" isActive={!this.state.muteMessage} flipState={this.flipState(\"muteMessage\")}/>\n                            <SpeechButton id=\"SB2\" text=\"I'm really confused\" isActive={!this.state.confusedMessage} flipState={this.flipState(\"confusedMessage\")}/>\n                            <SpeechButton id=\"SB3\" text=\"Please slow down\" isActive={!this.state.slowDownMessage} flipState={this.flipState(\"slowDownMessage\")}/>\n                            <SpeechButton id=\"SB4\" text=\"There's a bad internet connection\" isActive={!this.state.internetConnectionMessage} flipState={this.flipState(\"internetConnectionMessage\")}/>\n                            <SpeechButton id=\"SB5\" text=\"I can't see the slides\" isActive={!this.state.cannotSeeSlidesMessage} flipState={this.flipState(\"cannotSeeSlidesMessage\")}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n\n\n            </>\n        )\n    }\n}\n\nexport default Student;\n","/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/pages/Teacher.jsx",["60"],"/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/components/SpeechButton.jsx",[],"/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/components/EmotionLeaderBoard.jsx",["61","62"],"import React from 'react';\n\nclass EmotionLeaderBoard extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    // update with values from props\n    // var data =\n    //     { \"ğŸ˜¡ Anger\": 1,\n    //     \"ğŸ˜’ Contempt\": 1,\n    //     \"ğŸ¤¢ Disgust\": 2,\n    //     \"ğŸ˜¨ Fear\": 0,\n    //     \"ğŸ˜„ Happiness\": 8,\n    //     \"ğŸ™‚ Neutral\": 15,\n    //     \"ğŸ˜¥ Sadness\": 1,\n    //     \"ğŸ˜® Surprise\": 0\n    // };\n\n    var total = 0;\n\n    for (const [key, value] of Object.entries(this.props.data)) {\n        total += value;\n      }\n\n    var itemArray = Object.keys(this.props.data).map((key) => {\n        return [key, this.props.data[key]];\n      });\n\n    itemArray.sort(function(first, second) {\n    return second[1] - first[1];\n    });\n\n    console.log(itemArray)\n\n    return (\n      <div>\n          <ul className=\"emotion-leaderboard\">\n          {/* {Object.keys(data).map((key, index) => (\n          <li key={index} style={{fontSize: (Math.max(5, data[key])/total)*6 +'rem'}}>{key} ({data[key]})</li>\n            ))\n        } */}\n\n            {itemArray.map((value, index) => {\n                            return <li className=\"mb-3\" style={{fontSize: Math.min(Math.max(value[1]+1 / (total + 1), 0.5) * 1.5, 6) +'rem'}}>{value[0]} ({value[1]})</li>\n                        })}\n          </ul>\n      </div>\n    )\n  }\n};\n\nexport default EmotionLeaderBoard;\n","/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/components/AttendancePieChart.jsx",["63"],"import React from 'react';\nimport { PieChart } from 'react-minimal-pie-chart';\n\nclass AttendancePieChart extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    //   const data = {};\n\n    //   data.dataset = [\n    //     {label: 'not attending', quantity: 5},\n    //     {label: 'present', quantity: 26},\n    //     {label: 'away', quantity: 2},\n    //   ]\n\n    //   data.colors = [\"blue\", \"orange\", \"purple\"];\n\n    //   data.arcClass = 'arc';\n\n    // pass in real values in props\n    // const mockData = [\n    //     { title: 'Absent', value: 5, color: '#696773' },\n    //     { title: 'Present', value: 26, color: '#009fb7' },\n    //     { title: 'Away', value: 2, color: ' #fed766' },\n    // ];\n\n\n    return (\n      <div>\n          <PieChart\n            data={this.props.attendanceData}\n            radius={40}\n            label={({ dataEntry }) => dataEntry.title}\n            labelStyle={{\n                fontSize: 0.25+'rem',\n                textAlign: 'right',\n              }}\n          />\n      </div>\n    )\n  }\n};\n\nexport default AttendancePieChart;\n",["64","65"],"/Users/taketomo/Library/Mobile Documents/com~apple~CloudDocs/developement projects/ReadTheRoom/read-the-room/src/components/Notification.jsx",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":26},{"ruleId":"70","severity":1,"message":"74","line":4,"column":10,"nodeType":"72","messageId":"73","endLine":4,"endColumn":16},{"ruleId":"70","severity":1,"message":"75","line":130,"column":15,"nodeType":"72","messageId":"73","endLine":130,"endColumn":20},{"ruleId":"76","severity":1,"message":"77","line":136,"column":19,"nodeType":"78","endLine":137,"endColumn":16},{"ruleId":"79","severity":1,"message":"80","line":5,"column":3,"nodeType":"81","messageId":"82","endLine":7,"endColumn":4},{"ruleId":"70","severity":1,"message":"83","line":24,"column":17,"nodeType":"72","messageId":"73","endLine":24,"endColumn":20},{"ruleId":"79","severity":1,"message":"80","line":6,"column":3,"nodeType":"81","messageId":"82","endLine":8,"endColumn":4},{"ruleId":"66","replacedBy":"84"},{"ruleId":"68","replacedBy":"85"},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'render' is defined but never used.","'items' is assigned a value but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'key' is assigned a value but never used.",["86"],["87"],"no-global-assign","no-unsafe-negation"]